import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;

public class Start {
    public static void main(String[] args) throws IOException {
        for (int i=0; i<args.length; i++) {
            String comment = "";
            File in = new File(args[i] + ".c");
            File old = new File(args[i] + " raw.c");
            in.renameTo(old);
            Scanner input = new Scanner(old);    //change to old when building
            PrintWriter output = new PrintWriter(args[i]+".c");
            Boolean inComment = false;
            while (input.hasNext()) {
                String code = input.nextLine();
                while (stringLength(code) < 80)
                    code += " ";
                if (code.contains("/*"))
                    inComment = true;
                if (code.contains("*/"))
                    inComment = false;
                if (!inComment && !code.contains("#pragma config(") && !code.contains("//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//"))
                    code += getComment(code);
                output.println(code);
            }
            output.close();
        }
    }
    public static String getComment(String code) {
        System.out.println(code);
        String comment = "// ";
        if (code.contains("else"))
            comment+="otherwise ";
        else if(code.contains("if"))
            comment+="check  if "+getParms(code);
        else if(code.contains("while(true)"))
            comment+="infinite loop ";
        else if(code.contains("while("))
            comment+="run until "+getParms(code);
        else if (code.contains("for"))
            comment+="loop "+forLoop(code)+" times";
        else if(code.contains("int") && code.contains("="))
            comment+="declare integer "+intcode(code);
        else if (code.contains("=") && !code.contains("=="))
            comment+="set "+code.replace("="," to ");
        else if (code.contains("int"))
            comment+="declare "+code;

        String[] parms;
        if (code.contains("startMotor")) {
            parms = getParms(code).split(",");
            comment+="start "+parms[0]+" at "+Double.parseDouble(parms[1])/128*100+"% of max speed";
        }
        if (code.contains("stopMotor"))
            comment+="stop "+getParms(code);
        if(code.contains("wait"))
            comment+="wait "+getParms(code)+" seconds";
        if(code.contains("untilBump"))
            comment+= "wait for "+getParms(code);
        if(code.contains("turnLEDOn"))
            comment+="turn on led";
        if(code.contains("turnLEDOff"))
            comment+="turn off led";



        return comment;
    }
    public static String getParms(String input) {
        int start = input.indexOf('(')+1;
        int end = input.indexOf(')');
        return input.substring(start,end);
    }
    public static int forLoop(String input) {
        int end = input.indexOf(';',input.indexOf(';')+1);
//        System.out.println(end);
        boolean done = false;
        int i=end-1;
        for(; !done; i--) {
            try {
                Integer.parseInt(input.substring(i,end));
            }
            catch(Exception e) {
                done = true;
            }
        }
//        System.out.println(i+1+" "+end);
        int endPoint = Integer.parseInt(input.substring(i+2,end));
//        System.out.println(Integer.parseInt(input.substring(i+2,end)));

        end = input.indexOf(';');
        done = false;
        i=end-1;
        for(; !done; i--) {
            try {
                Integer.parseInt(input.substring(i,end));
            }
            catch(Exception e) {
                done = true;
            }
        }
//        System.out.println(i+1+" "+end);
        int startPoint = Integer.parseInt(input.substring(i+2,end));
        return endPoint-startPoint;
    }
    public static String intcode(String code) {
        int one = code.indexOf("int") + 4;
        int two = code.substring(one).indexOf(' ');
        String name = code.substring(one,two);
        String value = "_l";
        try {value = code.substring(code.indexOf('='),code.indexOf(';')); } catch(Exception e){}
        return "declare integer "+name+"with value "+value;
    }
    public static int stringLength(String in) {
        int length=0;
        char[] str = in.toCharArray();
        for (char c:str) {
            if(c=='\t')
                length+=2;
            else
                length++;
        }
        return length;
    }
    public static boolean isBlank(String input) {
        return false;
    }
}